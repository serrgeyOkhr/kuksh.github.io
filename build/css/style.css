@charset "UTF-8";a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline}:focus{outline:0}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:'';content:none}table{border-collapse:collapse;border-spacing:0}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration,input[type=search]::-webkit-search-results-button,input[type=search]::-webkit-search-results-decoration{-webkit-appearance:none;-moz-appearance:none}input[type=search]{-webkit-appearance:none;-moz-appearance:none;box-sizing:content-box}textarea{overflow:auto;vertical-align:top;resize:vertical}audio,canvas,video{display:inline-block;max-width:100%}audio:not([controls]){display:none;height:0}[hidden]{display:none}html{font-size:100%;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%}a:focus{outline:thin dotted}a:active,a:hover{outline:0}img{border:0;-ms-interpolation-mode:bicubic}figure{margin:0}form{margin:0}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0;white-space:normal}button,input,select,textarea{font-size:100%;margin:0;vertical-align:baseline}button,input{line-height:normal}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=search]{-webkit-appearance:textfield;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}textarea{overflow:auto;vertical-align:top}table{border-collapse:collapse;border-spacing:0}button,html,input,select,textarea{color:#222}::-moz-selection{background:#b3d4fc;text-shadow:none}::selection{background:#b3d4fc;text-shadow:none}img{vertical-align:middle}fieldset{border:0;margin:0;padding:0}textarea{resize:vertical}.chromeframe{margin:.2em 0;background:#ccc;color:#000;padding:.2em 0}body{font-family:Arial}@font-face{font-family:Gabriola;src:url(../fonts/11053.ttf) format("truetype");font-weight:400;font-style:normal}.header{background:#0091bc url(img/фон-комп.jpg) 50% 50% no-repeat;background-size:cover;height:100vh;display:flex;align-items:center}.header_btn-down{width:55px;height:25px;position:absolute;bottom:4%;left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%);border:none;background-color:transparent}.header_btn-down img{max-width:100%}.header_title{font-weight:900;font-size:96px;color:#fff;margin-left:100px;margin-top:100px;position:relative;z-index:2;line-height:.9}@media (max-width:620px){.header_title{font-size:86px;margin-left:60px}}.header_title:before{content:'';position:absolute;width:600px;height:105px;box-shadow:9px 12px 43px 14px rgba(0,0,0,.5);bottom:-60px;left:-100px;z-index:-1}@media (max-width:620px){.header_title:before{width:530px}}.header_title:after{content:"Дизайнер Художник";font-size:16px;position:absolute;bottom:-26%;width:20%;right:0}@media (max-width:500px){.header{background:#0091bc url(../img/фон.png) 50% 50% no-repeat;background-size:cover;width:100%;height:96vh;display:flex;align-items:center}.header_btn-down{width:55px;height:25px;position:absolute;bottom:4%;left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%);border:none;background-color:transparent}.header_btn-down img{max-width:100%}.header_title{font-weight:900;width:80%;font-size:76px;color:#fff;margin-left:40px;padding-top:40%;position:relative;z-index:2}}@media (max-width:500px) and (max-width:400px){.header_title{font-size:64px;margin-left:35px;padding-top:40%}}@media (max-width:500px) and (max-width:320px){.header_title{font-size:58px}}@media (max-width:500px){.header_title:before{content:'';position:absolute;width:110%;height:75px;box-shadow:9px 12px 13px 4px rgba(0,0,0,.5);bottom:-30px;left:-20%;z-index:-1}}@media (max-width:500px) and (max-width:400px){.header_title:before{width:105%}}@media (max-width:500px){.header_title:after{content:"Дизайнер Художник";font-size:16px;position:absolute;bottom:-16%;width:20%;right:10%}}@media (max-width:500px) and (max-width:400px){.header_title:after{right:15%}}.what{height:50vh;background-color:#000;display:flex;flex-direction:column;justify-content:center;align-items:center}@media (max-width:500px){.what{height:250px}}.what img{max-height:60%}.what_title{color:#fff;font-size:22px}.block-content{background:#ba9e81;background:linear-gradient(90deg,#bb9e82 0,#e2cfbc 100%);overflow:hidden;position:relative;display:flex;flex-direction:column;justify-content:center}.block-content_img{width:80%;position:relative;-webkit-transform:translateY(-20%);transform:translateY(-20%);z-index:2}.block-content_block{position:relative;left:50%;-webkit-transform:translateX(-13%);transform:translateX(-13%);color:#4f4d4b;z-index:5}.block-content_block_title{font-size:60px;text-transform:uppercase;margin-bottom:15px;margin-top:41px}@media (max-width:950px){.block-content_block_title{font-size:50px}}.block-content_block_list{padding-bottom:40px}.block-content_block_list li{font-family:Gabriola,sans-serif;font-size:42px;line-height:1}@media (max-width:950px){.block-content_block_list li{font-size:32px}}@media (max-width:768px){.block-content_block_list li{font-size:26px}}.block-content_block_button{margin-left:20%}@media (max-width:500px){.block-content{background:#ba9e81;background:linear-gradient(90deg,#bb9e82 0,#e2cfbc 100%);overflow:hidden;position:relative}.block-content_img{width:80%;position:relative;-webkit-transform:translateY(-20%);transform:translateY(-20%)}.block-content_block{width:50%;position:relative;left:50%;-webkit-transform:translateX(-13%);transform:translateX(-13%);color:#4f4d4b}.block-content_block_title{font-size:29px;text-transform:uppercase;margin-bottom:15px;margin-top:41px}.block-content_block_list{padding-bottom:40px}.block-content_block_list li{font-family:Gabriola,sans-serif;font-size:22px;line-height:25px}.block-content_block_button{margin-left:20%}}.graffiti{overflow:hidden;position:relative}.graffiti img{width:45%;position:relative;display:block;margin-left:auto;-webkit-transform:translateY(-20%);transform:translateY(-20%)}.graffiti_block{width:50%;position:relative;display:flex;flex-direction:column;justify-content:center;align-items:center;right:0;-webkit-transform:translateX(30%);transform:translateX(30%);color:#4f4d4b}.graffiti_block_title{font-size:60px;text-transform:uppercase;margin-bottom:15px;margin-top:121px}@media (max-width:950px){.graffiti_block_title{font-size:50px}}@media (max-width:950px){.graffiti_block_title{margin-top:101px}}@media (max-width:768px){.graffiti_block_title{margin-top:81px}}.graffiti_block_list{padding-bottom:40px}.graffiti_block_list li{font-family:Gabriola,sans-serif;font-size:45px}@media (max-width:950px){.graffiti_block_list li{font-size:32px}}@media (max-width:768px){.graffiti_block_list li{font-size:26px}}@media (max-width:500px){.graffiti{background:#ba9e81;background:linear-gradient(90deg,#bb9e82 0,#e2cfbc 100%);overflow:hidden;position:relative}.graffiti img{width:45%;position:relative;display:block;margin-left:auto;-webkit-transform:translateY(-20%);transform:translateY(-20%)}.graffiti_block{width:50%;position:relative;display:flex;flex-direction:column;justify-content:center;align-items:center;right:0;-webkit-transform:translateX(30%);transform:translateX(30%);color:#4f4d4b}.graffiti_block_title{font-size:29px;text-transform:uppercase;margin-bottom:15px;margin-top:41px}.graffiti_block_list{padding-bottom:40px}.graffiti_block_list li{font-family:Gabriola,sans-serif;font-size:22px;line-height:25px}}.design{overflow:hidden;position:relative}.design_img{position:relative;display:block}.design_mob{display:none}.design_desk{display:block;position:absolute;top:0;left:-20%;width:90%}.design_block{width:50%;position:relative;display:flex;flex-direction:column;justify-content:center;align-items:center;margin-left:auto;margin-bottom:100px;color:#4f4d4b}.design_block_title{font-size:60px;text-transform:uppercase;margin-bottom:15px;margin-top:281px}@media (max-width:950px){.design_block_title{font-size:50px;margin-top:200px}}.design_block_subtitle{text-transform:uppercase;margin-bottom:15px}@media (min-width:950px){.design_block_subtitle{font-size:24px}}@media (min-width:768px){.design_block_subtitle{font-size:22px}}.design_block_list{padding-bottom:100px}@media (min-width:768px){.design_block_list{padding-bottom:50px}}.design_block_list li{font-family:Gabriola,sans-serif;font-size:45px}@media (max-width:950px){.design_block_list li{font-size:32px}}@media (max-width:768px){.design_block_list li{font-size:26px}}@media (max-width:500px){.design{margin-top:73px;padding-top:20px;background:#ba9e81;background:linear-gradient(90deg,#bb9e82 0,#e2cfbc 100%);overflow:hidden;position:relative}}@media (max-width:500px) and (max-width:345px){.design{margin-top:65px;padding-top:5px}}@media (max-width:500px){.design_img{width:30%;position:relative;display:block;margin-top:-180px;-webkit-transform:translateY(-28%);transform:translateY(-28%)}.design_mob{display:block}.design_desk{display:none!important}.design_block{width:50%;position:relative;display:flex;flex-direction:column;justify-content:center;align-items:center;margin-left:auto;-webkit-transform:translateX(-10%);transform:translateX(-10%);margin-bottom:0;color:#4f4d4b}.design_block_title{margin-top:0;font-size:29px;text-transform:uppercase;margin-bottom:5px}.design_block_subtitle{text-transform:uppercase;margin-bottom:15px}.design_block_list{padding-bottom:40px}.design_block_list li{font-family:Gabriola,sans-serif;font-size:22px;line-height:25px}}.digital{overflow:hidden;position:relative}.digital_img{width:50%;position:relative;display:block;margin-left:auto;margin-top:-60px;-webkit-transform:translateY(-20%);transform:translateY(-20%)}.digital_block{width:60%;position:relative;display:flex;flex-direction:column;justify-content:center;align-items:center;color:#4f4d4b}.digital_block_title{font-size:60px;text-transform:uppercase;margin-bottom:15px;margin-top:80px}@media (max-width:950px){.digital_block_title{font-size:50px;margin-top:100px}}@media (max-width:768px){.digital_block_title{font-size:44px;margin-top:60px}}.digital_block_list{margin-bottom:50px}.digital_block_list li{font-family:Gabriola,sans-serif;font-size:45px}@media (max-width:950px){.digital_block_list li{font-size:32px}}@media (max-width:768px){.digital_block_list li{font-size:26px}}@media (max-width:500px){.digital{position:relative}.digital_img{width:50%;position:relative;display:block;margin-left:auto;margin-top:-70px;-webkit-transform:translateY(-15%);transform:translateY(-15%)}.digital_block{width:60%;position:relative;display:flex;flex-direction:column;justify-content:center;align-items:center;color:#4f4d4b}}@media (max-width:500px) and (max-width:330px){.digital_block{width:50%}}@media (max-width:500px){.digital_block_title{font-size:29px;text-transform:uppercase;margin-bottom:5px;margin-top:100px}}@media (max-width:500px) and (max-width:330px){.digital_block_title{font-size:24px}}@media (max-width:500px){.digital_block_list{margin-bottom:50px}.digital_block_list li{font-family:Gabriola,sans-serif;font-size:22px;line-height:25px}}.paint{position:relative}.paint_img{width:45%;position:relative;display:block;margin-top:-260px;-webkit-transform:translateY(-20%);transform:translateY(-20%)}.paint_block{width:50%;position:relative;display:flex;flex-direction:column;justify-content:flex-start;align-items:flex-start;margin-left:auto;color:#4f4d4b}.paint_block_title{font-size:60px;text-transform:uppercase;padding-bottom:125px;margin-top:121px}@media (max-width:950px){.paint_block_title{font-size:50px;margin-top:101px}}@media (max-width:768px){.paint_block_title{margin-top:81px}}@media (max-width:500px){.paint{position:relative}.paint_img{width:45%;position:relative;display:block;margin-top:-160px;-webkit-transform:translateY(-20%);transform:translateY(-20%)}.paint_block{width:50%;position:relative;display:flex;flex-direction:column;justify-content:flex-start;align-items:flex-start;margin-left:auto;color:#4f4d4b}.paint_block_title{margin-top:0;font-size:29px;text-transform:uppercase;margin-bottom:55px;padding-bottom:0}}.forms{padding-top:30px;background-color:#000;padding-bottom:70px}.forms_block{display:flex;position:relative;flex-direction:column;justify-content:center;align-items:center}@media (min-width:900px){.forms_block{margin-bottom:150px}}.forms_form{display:flex;align-items:center}@media (max-width:900px){.forms_form{flex-direction:column}}.forms_form input{margin-right:15px;border-radius:50px;border:none;padding:14px 14px}@media (max-width:900px){.forms_form input{margin-bottom:32px;margin-right:0}}.forms_form_button{width:170px;height:42px;background-color:#d6bea8;border:none;border-radius:50px;font-weight:700}@media (max-width:900px){.forms_form_button{margin:40px auto}}.forms_title{color:#fff;font-size:24px;text-align:center;width:70%;line-height:130%;margin-bottom:90px}@media (max-width:375px){.forms_title{width:83%}}.nav_burger span{height:15px;width:65px;position:absolute;top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%);border-radius:50px;right:11%;background-color:#2f2f2e}@media (max-width:500px){.nav_burger span{height:10px;width:45px}}.nav_burger span:before{content:'';height:15px;width:65px;position:absolute;-webkit-transform:translateY(150%);transform:translateY(150%);border-radius:50px;right:0;background-color:#2f2f2e}@media (max-width:500px){.nav_burger span:before{height:10px;width:45px}}.nav_burger span:after{content:'';height:15px;width:65px;position:absolute;-webkit-transform:translateY(-150%);transform:translateY(-150%);border-radius:50px;right:0;background-color:#2f2f2e}@media (max-width:500px){.nav_burger span:after{height:10px;width:45px}}.nav_sec_burger:before{content:'';position:absolute;width:50px;height:50px;background-color:transporent;border:12px solid #2f2f2e;left:11%;top:50%;border-radius:50px;-webkit-transform:translateY(-50%);transform:translateY(-50%)}@media (max-width:500px){.nav_sec_burger:before{width:30px;height:30px;border:7px solid #2f2f2e}}.nav{display:flex;justify-content:space-between;padding-top:50px}@media (max-width:500px){.nav{padding-top:20px}}.nav_btn{height:120px;width:220px;border:1px solid rgba(255,255,255,.5);border-radius:100px;background-color:transparent}@media (max-width:500px){.nav_btn{height:74px;width:140px}}.nav_burger{position:relative;-webkit-transform:translateX(-50%);transform:translateX(-50%);box-shadow:-13.121px 15.094px 29.76px 2.24px rgba(15,0,20,.14)}.nav_sec_burger{position:relative;-webkit-transform:translateX(50%);transform:translateX(50%);box-shadow:-13.121px 15.094px 29.76px 2.24px rgba(15,0,20,.14)}.footer{background:#ba9e81;background:linear-gradient(90deg,#bb9e82 0,#e2cfbc 100%);display:flex;flex-direction:column;align-items:center;padding-top:40px}.footer_title{padding:5px 10px;font-weight:700;font-size:26px;text-decoration:none;color:#000}.footer address{margin:45px auto}.footer_link{display:flex;justify-content:space-between;width:200px;margin-bottom:70px}@media (max-width:500px){.footer_link{width:30%;margin-bottom:30px}}.footer_link a{margin:0 5px}.menu{height:100vh;width:100%;z-index:10;background:#ba9e81;background:linear-gradient(90deg,#bb9e82 0,#e2cfbc 100%);position:fixed;top:0;display:flex;flex-direction:column;justify-content:center;align-items:center}.menu_display{display:none}.menu button{position:absolute;top:15%;right:0;background:#ba9e81;background:linear-gradient(90deg,#cdb8a3 0,#e2cfbc 100%);box-shadow:-13.121px 15.094px 29.76px 2.24px rgba(15,0,20,.14);border:1px solid rgba(255,255,255,.3);border-radius:50px;font-size:24px;-webkit-transform:translateX(50%);transform:translateX(50%);padding:10px 120px 10px 30px;font-weight:300}@media (max-width:500px){.menu button{top:10%}}.menu button img{max-width:100%}@media (max-width:500px){.menu button img{max-width:70%}}.menu_trigon{height:20%}.menu_trigon img{max-height:100%}.menu_content{display:flex;flex-direction:column;text-align:center;justify-content:center;height:100vh}.menu_content_port{line-height:1.1;font-size:35px}@media (max-width:425px){.menu_content_port{font-size:26px}}.menu_content_port li:first-child{font-size:50px;font-weight:700;margin-bottom:55px;position:relative;display:flex;justify-content:center}@media (max-width:768px){.menu_content_port li:first-child{font-size:46px;margin-bottom:35px}}@media (max-width:425px){.menu_content_port li:first-child{font-size:40px;margin-bottom:20px}}.menu_content_port li:first-child:before{content:"";width:20px;height:20px;background-color:#000;border-radius:50px;align-self:center;position:absolute;left:0;-webkit-transform:translateX(-30px);transform:translateX(-30px)}.menu_content_port a{text-decoration:none;color:#000}.menu_content_doc{font-size:35px;line-height:1.1}@media (max-width:425px){.menu_content_doc{font-size:26px}}.menu_content_doc li:first-child{margin-top:55px;margin-bottom:55px;font-size:50px;font-weight:700;position:relative;display:flex;justify-content:center}@media (max-width:768px){.menu_content_doc li:first-child{font-size:46px;margin-top:35px;margin-bottom:35px}}@media (max-width:425px){.menu_content_doc li:first-child{font-size:40px;margin-top:20px;margin-bottom:20px}}.menu_content_doc li:first-child:before{content:"";width:20px;height:20px;background-color:#000;border-radius:50px;align-self:center;position:absolute;left:0;-webkit-transform:translateX(-30px);transform:translateX(-30px)}.menu_content_doc a{text-decoration:none;color:#000}body{display:flex;flex-direction:column;overflow-x:hidden;background:#ba9e81;background:linear-gradient(90deg,#bb9e82 0,#e2cfbc 100%)}.idn-header{z-index:-1;margin-bottom:200px}.idn-header img{z-index:-1}.first_sli{margin-top:300px;margin-bottom:105px}.idn-nav{display:flex;justify-content:space-between;margin-top:-450px}@media (max-width:500px){.idn-nav{padding-top:20px}}.idn-nav_btn{height:120px;width:220px;border:1px solid rgba(255,255,255,.5);border-radius:100px;background-color:transparent}@media (max-width:500px){.idn-nav_btn{height:74px;width:140px}}.idn-nav_burger{position:relative;-webkit-transform:translateX(-50%);transform:translateX(-50%);box-shadow:-13.121px 15.094px 29.76px 2.24px rgba(15,0,20,.14)}.idn-nav_sec_burger{position:relative;-webkit-transform:translateX(50%);transform:translateX(50%);box-shadow:-13.121px 15.094px 29.76px 2.24px rgba(15,0,20,.14)}.idn-nav_burger span{height:15px;width:65px;position:absolute;top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%);border-radius:50px;right:11%;background-color:#2f2f2e}@media (max-width:500px){.idn-nav_burger span{height:10px;width:45px}}.idn-nav_burger span:before{content:'';height:15px;width:65px;position:absolute;-webkit-transform:translateY(150%);transform:translateY(150%);border-radius:50px;right:0;background-color:#2f2f2e}@media (max-width:500px){.idn-nav_burger span:before{height:10px;width:45px}}.idn-nav_burger span:after{content:'';height:15px;width:65px;position:absolute;-webkit-transform:translateY(-150%);transform:translateY(-150%);border-radius:50px;right:0;background-color:#2f2f2e}@media (max-width:500px){.idn-nav_burger span:after{height:10px;width:45px}}.idn-nav_sec_burger:before{content:'';position:absolute;width:50px;height:50px;background-color:transporent;border:12px solid #2f2f2e;left:11%;top:50%;border-radius:50px;-webkit-transform:translateY(-50%);transform:translateY(-50%)}@media (max-width:500px){.idn-nav_sec_burger:before{width:30px;height:30px;border:7px solid #2f2f2e}}.idn-title{z-index:8;color:#fff;margin-top:-150px;height:140px;width:80%;background-color:rgba(0,0,0,.7)}.idn-title_tit{font-size:80px;font-weight:900;text-align:right;padding-top:10px;padding-right:15px}.idn-title h3{font-size:25px;text-align:right;padding-right:15px}.idn-slider{position:relative}.idn-slider_title{position:absolute;bottom:0;left:0;font-size:40px;color:#fff;background-color:rgba(0,0,0,.4);padding:30px 200px 60px 30px}.button{background:linear-gradient(270deg,grey 0,#d1d1d1 100%);border:none;border-radius:50px;font-size:24px;text-decoration:none;color:#000;z-index:10;padding:15px 50px;font-weight:300;box-shadow:-6px 4px 5px 0 rgba(15,0,20,.17)}@media (max-width:768px){.button{padding:15px 35px;padding-top:12px;font-size:20px}}@media (max-width:500px){.button{padding:8px 35px;padding-top:12px;font-size:100%}}img{max-width:100%}.shell{display:none}@media (max-width:500px){.shell{display:block;position:absolute;width:100%;height:430px;border:1px solid rgba(255,255,255,.7);box-shadow:0 0 12px 7.86px rgba(0,0,0,.1);background-image:linear-gradient(-83deg,rgba(230,210,192,.98039) 0,rgba(197,171,146,0) 100%);-webkit-transform:skew(20deg) rotate(20deg) translateY(0);transform:skew(20deg) rotate(20deg) translateY(0)}.shell_sec{-webkit-transform:skew(20deg) rotate(20deg) translateY(-108%);transform:skew(20deg) rotate(20deg) translateY(-108%)}}.shell_first{display:block;position:absolute;width:100%;height:20%;left:0;border:1px solid rgba(255,255,255,.7);background-image:linear-gradient(83deg,rgba(230,210,192,.98039) 0,rgba(197,171,146,.8) 100%)}@media (max-width:768px){.shell_first{height:17%}}@media (max-width:500px){.shell_first{display:none}}.container{align-self:center;width:950px}@media (max-width:950px){.container{width:728px}}@media (max-width:768px){.container{width:500px}}@media (max-width:500px){.container{width:100%}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
